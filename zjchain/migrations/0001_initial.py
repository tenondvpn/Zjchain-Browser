# Generated by Django 4.0 on 2023-06-01 09:32

import clickhouse_backend.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PrivateKeyTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seckey', clickhouse_backend.models.StringField()),
                ('ecn_prikey', clickhouse_backend.models.StringField()),
                ('date', clickhouse_backend.models.UInt32Field()),
            ],
            options={
                'db_table': 'private_key_table',
                'ordering': ['-seckey'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['seckey'], partition_by='date'),
            },
        ),
        migrations.CreateModel(
            name='ZjcCkAccountKeyValueTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_field', clickhouse_backend.models.StringField(db_column='from')),
                ('to', clickhouse_backend.models.StringField()),
                ('type', clickhouse_backend.models.UInt32Field()),
                ('shard_id', clickhouse_backend.models.UInt32Field()),
                ('key', clickhouse_backend.models.StringField()),
                ('value', clickhouse_backend.models.StringField()),
            ],
            options={
                'db_table': 'zjc_ck_account_key_value_table',
                'ordering': ['type', 'key', 'from_field', 'to'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['type', 'key', 'from_field', 'to'], partition_by='shard_id'),
            },
        ),
        migrations.CreateModel(
            name='ZjcCkAccountTable',
            fields=[
                ('id', clickhouse_backend.models.StringField(primary_key=True, serialize=False)),
                ('shard_id', clickhouse_backend.models.UInt32Field()),
                ('pool_index', clickhouse_backend.models.UInt32Field()),
                ('balance', clickhouse_backend.models.UInt64Field()),
            ],
            options={
                'db_table': 'zjc_ck_account_table',
                'ordering': ['id', 'pool_index'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['id', 'pool_index'], partition_by='shard_id'),
            },
        ),
        migrations.CreateModel(
            name='ZjcCkBlockTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shard_id', clickhouse_backend.models.UInt32Field()),
                ('pool_index', clickhouse_backend.models.UInt32Field()),
                ('height', clickhouse_backend.models.UInt64Field()),
                ('prehash', clickhouse_backend.models.StringField()),
                ('hash', clickhouse_backend.models.StringField()),
                ('version', clickhouse_backend.models.UInt32Field()),
                ('vss', clickhouse_backend.models.UInt64Field()),
                ('elect_height', clickhouse_backend.models.UInt64Field()),
                ('bitmap', clickhouse_backend.models.StringField()),
                ('timestamp', clickhouse_backend.models.UInt64Field()),
                ('timeblock_height', clickhouse_backend.models.UInt64Field()),
                ('bls_agg_sign_x', clickhouse_backend.models.StringField()),
                ('bls_agg_sign_y', clickhouse_backend.models.StringField()),
                ('commit_bitmap', clickhouse_backend.models.StringField()),
                ('tx_size', clickhouse_backend.models.UInt32Field()),
                ('date', clickhouse_backend.models.UInt32Field()),
            ],
            options={
                'db_table': 'zjc_ck_block_table',
                'ordering': ['pool_index', 'height'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['pool_index', 'height'], partition_by=['shard_id', 'date']),
            },
        ),
        migrations.CreateModel(
            name='ZjcCkStatisticTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', clickhouse_backend.models.UInt64Field()),
                ('all_zjc', clickhouse_backend.models.UInt64Field()),
                ('all_address', clickhouse_backend.models.UInt32Field()),
                ('all_contracts', clickhouse_backend.models.UInt32Field()),
                ('all_transactions', clickhouse_backend.models.UInt32Field()),
                ('all_nodes', clickhouse_backend.models.UInt32Field()),
                ('all_waiting_nodes', clickhouse_backend.models.UInt32Field()),
                ('date', clickhouse_backend.models.UInt32Field()),
            ],
            options={
                'db_table': 'zjc_ck_statistic_table',
                'ordering': ['-time'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['time'], partition_by='date'),
            },
        ),
        migrations.CreateModel(
            name='ZjcCkTransactionTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shard_id', clickhouse_backend.models.UInt32Field()),
                ('pool_index', clickhouse_backend.models.UInt32Field()),
                ('height', clickhouse_backend.models.UInt64Field()),
                ('prehash', clickhouse_backend.models.StringField()),
                ('hash', clickhouse_backend.models.StringField()),
                ('version', clickhouse_backend.models.UInt32Field()),
                ('vss', clickhouse_backend.models.UInt64Field()),
                ('elect_height', clickhouse_backend.models.UInt64Field()),
                ('bitmap', clickhouse_backend.models.StringField()),
                ('timestamp', clickhouse_backend.models.UInt64Field()),
                ('timeblock_height', clickhouse_backend.models.UInt64Field()),
                ('bls_agg_sign_x', clickhouse_backend.models.StringField()),
                ('bls_agg_sign_y', clickhouse_backend.models.StringField()),
                ('commit_bitmap', clickhouse_backend.models.StringField()),
                ('gid', clickhouse_backend.models.StringField()),
                ('from_field', clickhouse_backend.models.StringField(db_column='from')),
                ('from_pubkey', clickhouse_backend.models.StringField()),
                ('from_sign', clickhouse_backend.models.StringField()),
                ('to', clickhouse_backend.models.StringField()),
                ('amount', clickhouse_backend.models.UInt64Field()),
                ('gas_limit', clickhouse_backend.models.UInt64Field()),
                ('gas_used', clickhouse_backend.models.UInt64Field()),
                ('gas_price', clickhouse_backend.models.UInt64Field()),
                ('balance', clickhouse_backend.models.UInt64Field()),
                ('to_add', clickhouse_backend.models.UInt32Field()),
                ('type', clickhouse_backend.models.UInt32Field()),
                ('attrs', clickhouse_backend.models.StringField()),
                ('status', clickhouse_backend.models.UInt32Field()),
                ('tx_hash', clickhouse_backend.models.StringField()),
                ('call_contract_step', clickhouse_backend.models.UInt32Field()),
                ('storages', clickhouse_backend.models.StringField()),
                ('transfers', clickhouse_backend.models.StringField()),
                ('date', clickhouse_backend.models.UInt32Field()),
            ],
            options={
                'db_table': 'zjc_ck_transaction_table',
                'ordering': ['pool_index', 'height', 'type', 'from_field', 'to'],
                'managed': False,
                'engine': clickhouse_backend.models.ReplacingMergeTree(order_by=['pool_index', 'height', 'type', 'from_field', 'to'], partition_by=['shard_id', 'date']),
            },
        ),
    ]
